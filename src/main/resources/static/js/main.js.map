{"version":3,"file":"main.js","sources":["node_modules/@govuk-frontend/frontend/all.js","src/main/resources/js/main.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define('all', ['exports'], factory) :\n\t(factory((global.all = {})));\n}(this, (function (exports) { 'use strict';\n\n/**\n* Add event construct for modern browsers or IE8\n* which fires the callback with a pre-converted target reference\n* @param {object} node element\n* @param {string} type event type (e.g. click, load, or error)\n* @param {function} callback function\n*/\nfunction addEvent (node, type, callback) {\n  // Support: IE9+ and other browsers\n  if (node.addEventListener) {\n    node.addEventListener(type, function (event) {\n      callback(event, event.target);\n    }, false);\n  // Support: IE8\n  } else if (node.attachEvent) {\n    node.attachEvent('on' + type, function (event) {\n      callback(event, event.srcElement);\n    });\n  }\n}\n\n/**\n* Remove event utility for modern browsers or IE8\n* @param {object} node element\n* @param {string} type event type (e.g. click, load, or error)\n* @param {function} callback function\n*/\nfunction removeEvent (node, type, callback) {\n  // Support: IE9+ and other browsers\n  if (node.removeEventListener) {\n    node.removeEventListener(type, function (event) {\n      callback(event, event.target);\n    }, false);\n  // Support: IE8\n  } else if (node.detachEvent) {\n    node.detachEvent('on' + type, function (event) {\n      callback(event, event.srcElement);\n    });\n  }\n}\n\n/**\n* Cross-browser character code / key pressed\n* @param {object} event event\n* @returns {number} character code\n*/\nfunction charCode (event) {\n  return (typeof event.which === 'number') ? event.which : event.keyCode\n}\n\n/**\n* Cross-browser preventing default action\n* @param {object} event event\n*/\nfunction preventDefault (event) {\n  // Support: IE9+ and other browsers\n  if (event.preventDefault) {\n    event.preventDefault();\n  // Support: IE8\n  } else {\n    event.returnValue = false;\n  }\n}\n\n/**\n * TODO: Ideally this would be a NodeList.prototype.forEach polyfill\n * This seems to fail in IE8, requires more investigation.\n * See: https://github.com/imagitama/nodelist-foreach-polyfill\n */\nfunction nodeListForEach (nodes, callback) {\n  if (window.NodeList.prototype.forEach) {\n    return nodes.forEach(callback)\n  }\n  for (var i = 0; i < nodes.length; i++) {\n    callback.call(window, nodes[i], i, nodes);\n  }\n}\n\n/**\n * JavaScript 'shim' to trigger the click event of element(s) when the space key is pressed.\n *\n * Created since some Assistive Technologies (for example some Screenreaders)\n * will tell a user to press space on a 'button', so this functionality needs to be shimmed\n * See https://github.com/alphagov/govuk_elements/pull/272#issuecomment-233028270\n *\n * Usage instructions:\n * the 'shim' will be automatically initialised\n */\n\nvar KEY_SPACE = 32;\n\nfunction Button () { }\n\n/**\n* Add event handler for KeyDown\n* if the event target element has a role='button' and the event is key space pressed\n* then it prevents the default event and triggers a click event\n* @param {object} event event\n*/\nButton.prototype.handleKeyDown = function (event) {\n  // get the target element\n  var target = event.target || event.srcElement;\n  // if the element has a role='button' and the pressed key is a space, we'll simulate a click\n  if (target.getAttribute('role') === 'button' && charCode(event) === KEY_SPACE) {\n    preventDefault(event);\n    // trigger the target's click event\n    target.click();\n  }\n};\n\n/**\n* Initialise an event listener for keydown at document level\n* this will help listening for later inserted elements with a role=\"button\"\n*/\nButton.prototype.init = function () {\n  addEvent(document, 'keydown', this.handleKeyDown);\n};\n\n(function(undefined) {\n\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Object/defineProperty/detect.js\nvar detect = (\n  // In IE8, defineProperty could only act on DOM elements, so full support\n  // for the feature requires the ability to set a property on an arbitrary object\n  'defineProperty' in Object && (function() {\n  \ttry {\n  \t\tvar a = {};\n  \t\tObject.defineProperty(a, 'test', {value:42});\n  \t\treturn true;\n  \t} catch(e) {\n  \t\treturn false\n  \t}\n  }())\n);\n\nif (detect) return\n\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Object.defineProperty&flags=always\n(function (nativeDefineProperty) {\n\n\tvar supportsAccessors = Object.prototype.hasOwnProperty('__defineGetter__');\n\tvar ERR_ACCESSORS_NOT_SUPPORTED = 'Getters & setters cannot be defined on this javascript engine';\n\tvar ERR_VALUE_ACCESSORS = 'A property cannot both have accessors and be writable or have a value';\n\n\tObject.defineProperty = function defineProperty(object, property, descriptor) {\n\n\t\t// Where native support exists, assume it\n\t\tif (nativeDefineProperty && (object === window || object === document || object === Element.prototype || object instanceof Element)) {\n\t\t\treturn nativeDefineProperty(object, property, descriptor);\n\t\t}\n\n\t\tif (object === null || !(object instanceof Object || typeof object === 'object')) {\n\t\t\tthrow new TypeError('Object.defineProperty called on non-object');\n\t\t}\n\n\t\tif (!(descriptor instanceof Object)) {\n\t\t\tthrow new TypeError('Property description must be an object');\n\t\t}\n\n\t\tvar propertyString = String(property);\n\t\tvar hasValueOrWritable = 'value' in descriptor || 'writable' in descriptor;\n\t\tvar getterType = 'get' in descriptor && typeof descriptor.get;\n\t\tvar setterType = 'set' in descriptor && typeof descriptor.set;\n\n\t\t// handle descriptor.get\n\t\tif (getterType) {\n\t\t\tif (getterType !== 'function') {\n\t\t\t\tthrow new TypeError('Getter must be a function');\n\t\t\t}\n\t\t\tif (!supportsAccessors) {\n\t\t\t\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\n\t\t\t}\n\t\t\tif (hasValueOrWritable) {\n\t\t\t\tthrow new TypeError(ERR_VALUE_ACCESSORS);\n\t\t\t}\n\t\t\tObject.__defineGetter__.call(object, propertyString, descriptor.get);\n\t\t} else {\n\t\t\tobject[propertyString] = descriptor.value;\n\t\t}\n\n\t\t// handle descriptor.set\n\t\tif (setterType) {\n\t\t\tif (setterType !== 'function') {\n\t\t\t\tthrow new TypeError('Setter must be a function');\n\t\t\t}\n\t\t\tif (!supportsAccessors) {\n\t\t\t\tthrow new TypeError(ERR_ACCESSORS_NOT_SUPPORTED);\n\t\t\t}\n\t\t\tif (hasValueOrWritable) {\n\t\t\t\tthrow new TypeError(ERR_VALUE_ACCESSORS);\n\t\t\t}\n\t\t\tObject.__defineSetter__.call(object, propertyString, descriptor.set);\n\t\t}\n\n\t\t// OK to define value unconditionally - if a getter has been specified as well, an error would be thrown above\n\t\tif ('value' in descriptor) {\n\t\t\tobject[propertyString] = descriptor.value;\n\t\t}\n\n\t\treturn object;\n\t};\n}(Object.defineProperty));\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n(function(undefined) {\n  // Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Function/prototype/bind/detect.js\n  var detect = 'bind' in Function.prototype;\n\n  if (detect) return\n\n  // Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Function.prototype.bind&flags=always\n  Object.defineProperty(Function.prototype, 'bind', {\n      value: function bind(that) { // .length is 1\n          // add necessary es5-shim utilities\n          var $Array = Array;\n          var $Object = Object;\n          var ObjectPrototype = $Object.prototype;\n          var ArrayPrototype = $Array.prototype;\n          var Empty = function Empty() {};\n          var to_string = ObjectPrototype.toString;\n          var hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n          var isCallable; /* inlined from https://npmjs.com/is-callable */ var fnToStr = Function.prototype.toString, tryFunctionObject = function tryFunctionObject(value) { try { fnToStr.call(value); return true; } catch (e) { return false; } }, fnClass = '[object Function]', genClass = '[object GeneratorFunction]'; isCallable = function isCallable(value) { if (typeof value !== 'function') { return false; } if (hasToStringTag) { return tryFunctionObject(value); } var strClass = to_string.call(value); return strClass === fnClass || strClass === genClass; };\n          var array_slice = ArrayPrototype.slice;\n          var array_concat = ArrayPrototype.concat;\n          var array_push = ArrayPrototype.push;\n          var max = Math.max;\n          // /add necessary es5-shim utilities\n\n          // 1. Let Target be the this value.\n          var target = this;\n          // 2. If IsCallable(Target) is false, throw a TypeError exception.\n          if (!isCallable(target)) {\n              throw new TypeError('Function.prototype.bind called on incompatible ' + target);\n          }\n          // 3. Let A be a new (possibly empty) internal list of all of the\n          //   argument values provided after thisArg (arg1, arg2 etc), in order.\n          // XXX slicedArgs will stand in for \"A\" if used\n          var args = array_slice.call(arguments, 1); // for normal call\n          // 4. Let F be a new native ECMAScript object.\n          // 11. Set the [[Prototype]] internal property of F to the standard\n          //   built-in Function prototype object as specified in 15.3.3.1.\n          // 12. Set the [[Call]] internal property of F as described in\n          //   15.3.4.5.1.\n          // 13. Set the [[Construct]] internal property of F as described in\n          //   15.3.4.5.2.\n          // 14. Set the [[HasInstance]] internal property of F as described in\n          //   15.3.4.5.3.\n          var bound;\n          var binder = function () {\n\n              if (this instanceof bound) {\n                  // 15.3.4.5.2 [[Construct]]\n                  // When the [[Construct]] internal method of a function object,\n                  // F that was created using the bind function is called with a\n                  // list of arguments ExtraArgs, the following steps are taken:\n                  // 1. Let target be the value of F's [[TargetFunction]]\n                  //   internal property.\n                  // 2. If target has no [[Construct]] internal method, a\n                  //   TypeError exception is thrown.\n                  // 3. Let boundArgs be the value of F's [[BoundArgs]] internal\n                  //   property.\n                  // 4. Let args be a new list containing the same values as the\n                  //   list boundArgs in the same order followed by the same\n                  //   values as the list ExtraArgs in the same order.\n                  // 5. Return the result of calling the [[Construct]] internal\n                  //   method of target providing args as the arguments.\n\n                  var result = target.apply(\n                      this,\n                      array_concat.call(args, array_slice.call(arguments))\n                  );\n                  if ($Object(result) === result) {\n                      return result;\n                  }\n                  return this;\n\n              } else {\n                  // 15.3.4.5.1 [[Call]]\n                  // When the [[Call]] internal method of a function object, F,\n                  // which was created using the bind function is called with a\n                  // this value and a list of arguments ExtraArgs, the following\n                  // steps are taken:\n                  // 1. Let boundArgs be the value of F's [[BoundArgs]] internal\n                  //   property.\n                  // 2. Let boundThis be the value of F's [[BoundThis]] internal\n                  //   property.\n                  // 3. Let target be the value of F's [[TargetFunction]] internal\n                  //   property.\n                  // 4. Let args be a new list containing the same values as the\n                  //   list boundArgs in the same order followed by the same\n                  //   values as the list ExtraArgs in the same order.\n                  // 5. Return the result of calling the [[Call]] internal method\n                  //   of target providing boundThis as the this value and\n                  //   providing args as the arguments.\n\n                  // equiv: target.call(this, ...boundArgs, ...args)\n                  return target.apply(\n                      that,\n                      array_concat.call(args, array_slice.call(arguments))\n                  );\n\n              }\n\n          };\n\n          // 15. If the [[Class]] internal property of Target is \"Function\", then\n          //     a. Let L be the length property of Target minus the length of A.\n          //     b. Set the length own property of F to either 0 or L, whichever is\n          //       larger.\n          // 16. Else set the length own property of F to 0.\n\n          var boundLength = max(0, target.length - args.length);\n\n          // 17. Set the attributes of the length own property of F to the values\n          //   specified in 15.3.5.1.\n          var boundArgs = [];\n          for (var i = 0; i < boundLength; i++) {\n              array_push.call(boundArgs, '$' + i);\n          }\n\n          // XXX Build a dynamic function with desired amount of arguments is the only\n          // way to set the length property of a function.\n          // In environments where Content Security Policies enabled (Chrome extensions,\n          // for ex.) all use of eval or Function costructor throws an exception.\n          // However in all of these environments Function.prototype.bind exists\n          // and so this code will never be executed.\n          bound = Function('binder', 'return function (' + boundArgs.join(',') + '){ return binder.apply(this, arguments); }')(binder);\n\n          if (target.prototype) {\n              Empty.prototype = target.prototype;\n              bound.prototype = new Empty();\n              // Clean up dangling references.\n              Empty.prototype = null;\n          }\n\n          // TODO\n          // 18. Set the [[Extensible]] internal property of F to true.\n\n          // TODO\n          // 19. Let thrower be the [[ThrowTypeError]] function Object (13.2.3).\n          // 20. Call the [[DefineOwnProperty]] internal method of F with\n          //   arguments \"caller\", PropertyDescriptor {[[Get]]: thrower, [[Set]]:\n          //   thrower, [[Enumerable]]: false, [[Configurable]]: false}, and\n          //   false.\n          // 21. Call the [[DefineOwnProperty]] internal method of F with\n          //   arguments \"arguments\", PropertyDescriptor {[[Get]]: thrower,\n          //   [[Set]]: thrower, [[Enumerable]]: false, [[Configurable]]: false},\n          //   and false.\n\n          // TODO\n          // NOTE Function objects created using Function.prototype.bind do not\n          // have a prototype property or the [[Code]], [[FormalParameters]], and\n          // [[Scope]] internal properties.\n          // XXX can't delete prototype in pure-js.\n\n          // 22. Return F.\n          return bound;\n      }\n  });\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n/**\n * JavaScript 'polyfill' for HTML5's <details> and <summary> elements\n * and 'shim' to add accessiblity enhancements for all browsers\n *\n * http://caniuse.com/#feat=details\n *\n * Usage instructions:\n * the 'polyfill' will be automatically initialised\n */\n\nvar KEY_ENTER = 13;\nvar KEY_SPACE$1 = 32;\n\n// Create a flag to know if the browser supports navtive details\nvar NATIVE_DETAILS = typeof document.createElement('details').open === 'boolean';\n\nfunction Details () {\n  // Create a flag so we can prevent the initialisation\n  // function firing from both DOMContentLoaded and window.onload\n  this.INITIALISED = false;\n}\n\n/**\n* Handle cross-modal click events\n* @param {object} node element\n* @param {function} callback function\n*/\nDetails.prototype.handleKeyDown = function (node, callback) {\n  addEvent(node, 'keypress', function (event, target) {\n    // When the key gets pressed - check if it is enter or space\n    if (charCode(event) === KEY_ENTER || charCode(event) === KEY_SPACE$1) {\n      if (target.nodeName.toLowerCase() === 'summary') {\n        // Prevent space from scrolling the page\n        // and enter from submitting a form\n        preventDefault(event);\n        // Click to let the click event do all the necessary action\n        if (target.click) {\n          target.click();\n        } else {\n          // except Safari 5.1 and under don't support .click() here\n          callback(event, target);\n        }\n      }\n    }\n  });\n\n  // Prevent keyup to prevent clicking twice in Firefox when using space key\n  addEvent(node, 'keyup', function (event, target) {\n    if (charCode(event) === KEY_SPACE$1) {\n      if (target.nodeName.toLowerCase() === 'summary') {\n        preventDefault(event);\n      }\n    }\n  });\n\n  addEvent(node, 'click', function (event, target) {\n    callback(event, target);\n  });\n};\n\n/**\n* Get the nearest ancestor element of a node that matches a given tag name\n* @param {object} node element\n* @param {string} match tag name (e.g. div)\n*/\nDetails.prototype.getAncestor = function (node, match) {\n  do {\n    if (!node || node.nodeName.toLowerCase() === match) {\n      break\n    }\n    node = node.parentNode;\n  } while (node)\n\n  return node\n};\n\n/**\n* Initialise the script on a list of details elements in a container\n* @param {object} list of details elements\n* @param {string} container where to look for details elements\n*/\nDetails.prototype.initDetails = function (list, container) {\n  container = container || document.body;\n  // If this has already happened, just return\n  // else set the flag so it doesn't happen again\n  if (this.INITIALISED) {\n    return\n  }\n  this.INITIALISED = true;\n  // Get the collection of details elements, but if that's empty\n  // then we don't need to bother with the rest of the scripting\n  if ((list = container.getElementsByTagName('details')).length === 0) {\n    return\n  }\n  // else iterate through them to apply their initial state\n  var n = list.length;\n  var i = 0;\n  for (i; i < n; i++) {\n    var details = list[i];\n\n    // Save shortcuts to the inner summary and content elements\n    details.__summary = details.getElementsByTagName('summary').item(0);\n    details.__content = details.getElementsByTagName('div').item(0);\n\n    // If <details> doesn't have a <summary> and a <div> representing the content\n    // it means the required HTML structure is not met so the script will stop\n    if (!details.__summary || !details.__content) {\n      return\n    }\n\n    // If the content doesn't have an ID, assign it one now\n    // which we'll need for the summary's aria-controls assignment\n    if (!details.__content.id) {\n      details.__content.id = 'details-content-' + i;\n    }\n\n    // Add ARIA role=\"group\" to details\n    details.setAttribute('role', 'group');\n\n    // Add role=button to summary\n    details.__summary.setAttribute('role', 'button');\n\n    // Add aria-controls\n    details.__summary.setAttribute('aria-controls', details.__content.id);\n\n    // Set tabIndex so the summary is keyboard accessible for non-native elements\n    // http://www.saliences.com/browserBugs/tabIndex.html\n    if (!NATIVE_DETAILS) {\n      details.__summary.tabIndex = 0;\n    }\n\n    // Detect initial open state\n    var openAttr = details.getAttribute('open') !== null;\n    if (openAttr === true) {\n      details.__summary.setAttribute('aria-expanded', 'true');\n      details.__content.setAttribute('aria-hidden', 'false');\n    } else {\n      details.__summary.setAttribute('aria-expanded', 'false');\n      details.__content.setAttribute('aria-hidden', 'true');\n      if (!NATIVE_DETAILS) {\n        details.__content.style.display = 'none';\n      }\n    }\n\n    // Create a circular reference from the summary back to its\n    // parent details element, for convenience in the click handler\n    details.__summary.__details = details;\n  }\n\n  // Bind an event to handle summary elements\n  this.handleKeyDown(container, function (event, summary) {\n    if (!(summary = this.getAncestor(summary, 'summary'))) {\n      return true\n    }\n    return this.stateChange(summary)\n  }.bind(this));\n};\n\n/**\n* Define a statechange function that updates aria-expanded and style.display\n* @param {object} summary element\n*/\nDetails.prototype.stateChange = function (summary) {\n  var expanded = summary.__details.__summary.getAttribute('aria-expanded') === 'true';\n  var hidden = summary.__details.__content.getAttribute('aria-hidden') === 'true';\n\n  summary.__details.__summary.setAttribute('aria-expanded', (expanded ? 'false' : 'true'));\n  summary.__details.__content.setAttribute('aria-hidden', (hidden ? 'false' : 'true'));\n\n  if (!NATIVE_DETAILS) {\n    summary.__details.__content.style.display = (expanded ? 'none' : '');\n\n    var hasOpenAttr = summary.__details.getAttribute('open') !== null;\n    if (!hasOpenAttr) {\n      summary.__details.setAttribute('open', 'open');\n    } else {\n      summary.__details.removeAttribute('open');\n    }\n  }\n  return true\n};\n\n/**\n* Remove the click event from the node element\n* @param {object} node element\n*/\nDetails.prototype.destroy = function (node) {\n  removeEvent(node, 'click');\n};\n\n/**\n* Initialise an event listener for DOMContentLoaded at document level\n* and load at window level\n*\n* If the first one fires it will set a flag to block the second one\n* but if it's not supported then the second one will fire\n*/\nDetails.prototype.init = function () {\n  addEvent(document, 'DOMContentLoaded', this.initDetails.bind(this));\n  addEvent(window, 'load', this.initDetails.bind(this));\n};\n\n(function(undefined) {\n\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Window/detect.js\nvar detect = ('Window' in this);\n\nif (detect) return\n\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Window&flags=always\nif ((typeof WorkerGlobalScope === \"undefined\") && (typeof importScripts !== \"function\")) {\n\t(function (global) {\n\t\tif (global.constructor) {\n\t\t\tglobal.Window = global.constructor;\n\t\t} else {\n\t\t\t(global.Window = global.constructor = new Function('return function Window() {}')()).prototype = this;\n\t\t}\n\t}(this));\n}\n\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n(function(undefined) {\n\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Document/detect.js\nvar detect = (\"Document\" in this);\n\nif (detect) return\n\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Document&flags=always\nif ((typeof WorkerGlobalScope === \"undefined\") && (typeof importScripts !== \"function\")) {\n\n\tif (this.HTMLDocument) { // IE8\n\n\t\t// HTMLDocument is an extension of Document.  If the browser has HTMLDocument but not Document, the former will suffice as an alias for the latter.\n\t\tthis.Document = this.HTMLDocument;\n\n\t} else {\n\n\t\t// Create an empty function to act as the missing constructor for the document object, attach the document object as its prototype.  The function needs to be anonymous else it is hoisted and causes the feature detect to prematurely pass, preventing the assignments below being made.\n\t\tthis.Document = this.HTMLDocument = document.constructor = (new Function('return function Document() {}')());\n\t\tthis.Document.prototype = document;\n\t}\n}\n\n\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n(function(undefined) {\n\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Element/detect.js\nvar detect = ('Element' in this && 'HTMLElement' in this);\n\nif (detect) return\n\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Element&flags=always\n(function () {\n\n\t// IE8\n\tif (window.Element && !window.HTMLElement) {\n\t\twindow.HTMLElement = window.Element;\n\t\treturn;\n\t}\n\n\t// create Element constructor\n\twindow.Element = window.HTMLElement = new Function('return function Element() {}')();\n\n\t// generate sandboxed iframe\n\tvar vbody = document.appendChild(document.createElement('body'));\n\tvar frame = vbody.appendChild(document.createElement('iframe'));\n\n\t// use sandboxed iframe to replicate Element functionality\n\tvar frameDocument = frame.contentWindow.document;\n\tvar prototype = Element.prototype = frameDocument.appendChild(frameDocument.createElement('*'));\n\tvar cache = {};\n\n\t// polyfill Element.prototype on an element\n\tvar shiv = function (element, deep) {\n\t\tvar\n\t\tchildNodes = element.childNodes || [],\n\t\tindex = -1,\n\t\tkey, value, childNode;\n\n\t\tif (element.nodeType === 1 && element.constructor !== Element) {\n\t\t\telement.constructor = Element;\n\n\t\t\tfor (key in cache) {\n\t\t\t\tvalue = cache[key];\n\t\t\t\telement[key] = value;\n\t\t\t}\n\t\t}\n\n\t\twhile (childNode = deep && childNodes[++index]) {\n\t\t\tshiv(childNode, deep);\n\t\t}\n\n\t\treturn element;\n\t};\n\n\tvar elements = document.getElementsByTagName('*');\n\tvar nativeCreateElement = document.createElement;\n\tvar interval;\n\tvar loopLimit = 100;\n\n\tprototype.attachEvent('onpropertychange', function (event) {\n\t\tvar\n\t\tpropertyName = event.propertyName,\n\t\tnonValue = !cache.hasOwnProperty(propertyName),\n\t\tnewValue = prototype[propertyName],\n\t\toldValue = cache[propertyName],\n\t\tindex = -1,\n\t\telement;\n\n\t\twhile (element = elements[++index]) {\n\t\t\tif (element.nodeType === 1) {\n\t\t\t\tif (nonValue || element[propertyName] === oldValue) {\n\t\t\t\t\telement[propertyName] = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcache[propertyName] = newValue;\n\t});\n\n\tprototype.constructor = Element;\n\n\tif (!prototype.hasAttribute) {\n\t\t// <Element>.hasAttribute\n\t\tprototype.hasAttribute = function hasAttribute(name) {\n\t\t\treturn this.getAttribute(name) !== null;\n\t\t};\n\t}\n\n\t// Apply Element prototype to the pre-existing DOM as soon as the body element appears.\n\tfunction bodyCheck() {\n\t\tif (!(loopLimit--)) clearTimeout(interval);\n\t\tif (document.body && !document.body.prototype && /(complete|interactive)/.test(document.readyState)) {\n\t\t\tshiv(document, true);\n\t\t\tif (interval && document.body.prototype) clearTimeout(interval);\n\t\t\treturn (!!document.body.prototype);\n\t\t}\n\t\treturn false;\n\t}\n\tif (!bodyCheck()) {\n\t\tdocument.onreadystatechange = bodyCheck;\n\t\tinterval = setInterval(bodyCheck, 25);\n\t}\n\n\t// Apply to any new elements created after load\n\tdocument.createElement = function createElement(nodeName) {\n\t\tvar element = nativeCreateElement(String(nodeName).toLowerCase());\n\t\treturn shiv(element);\n\t};\n\n\t// remove sandboxed iframe\n\tdocument.removeChild(vbody);\n}());\n\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\n(function(undefined) {\n\n// Detection from https://github.com/Financial-Times/polyfill-service/blob/master/packages/polyfill-library/polyfills/Event/detect.js\nvar detect = (\n  (function(global) {\n\n  \tif (!('Event' in global)) return false;\n  \tif (typeof global.Event === 'function') return true;\n\n  \ttry {\n\n  \t\t// In IE 9-11, the Event object exists but cannot be instantiated\n  \t\tnew Event('click');\n  \t\treturn true;\n  \t} catch(e) {\n  \t\treturn false;\n  \t}\n  }(this))\n);\n\nif (detect) return\n\n// Polyfill from https://cdn.polyfill.io/v2/polyfill.js?features=Event&flags=always\n(function () {\n\tvar unlistenableWindowEvents = {\n\t\tclick: 1,\n\t\tdblclick: 1,\n\t\tkeyup: 1,\n\t\tkeypress: 1,\n\t\tkeydown: 1,\n\t\tmousedown: 1,\n\t\tmouseup: 1,\n\t\tmousemove: 1,\n\t\tmouseover: 1,\n\t\tmouseenter: 1,\n\t\tmouseleave: 1,\n\t\tmouseout: 1,\n\t\tstorage: 1,\n\t\tstoragecommit: 1,\n\t\ttextinput: 1\n\t};\n\n\t// This polyfill depends on availability of `document` so will not run in a worker\n\t// However, we asssume there are no browsers with worker support that lack proper\n\t// support for `Event` within the worker\n\tif (typeof document === 'undefined' || typeof window === 'undefined') return;\n\n\tfunction indexOf(array, element) {\n\t\tvar\n\t\tindex = -1,\n\t\tlength = array.length;\n\n\t\twhile (++index < length) {\n\t\t\tif (index in array && array[index] === element) {\n\t\t\t\treturn index;\n\t\t\t}\n\t\t}\n\n\t\treturn -1;\n\t}\n\n\tvar existingProto = (window.Event && window.Event.prototype) || null;\n\twindow.Event = Window.prototype.Event = function Event(type, eventInitDict) {\n\t\tif (!type) {\n\t\t\tthrow new Error('Not enough arguments');\n\t\t}\n\n\t\tvar event;\n\t\t// Shortcut if browser supports createEvent\n\t\tif ('createEvent' in document) {\n\t\t\tevent = document.createEvent('Event');\n\t\t\tvar bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\n\t\t\tvar cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\n\n\t\t\tevent.initEvent(type, bubbles, cancelable);\n\n\t\t\treturn event;\n\t\t}\n\n\t\tevent = document.createEventObject();\n\n\t\tevent.type = type;\n\t\tevent.bubbles = eventInitDict && eventInitDict.bubbles !== undefined ? eventInitDict.bubbles : false;\n\t\tevent.cancelable = eventInitDict && eventInitDict.cancelable !== undefined ? eventInitDict.cancelable : false;\n\n\t\treturn event;\n\t};\n\tif (existingProto) {\n\t\tObject.defineProperty(window.Event, 'prototype', {\n\t\t\tconfigurable: false,\n\t\t\tenumerable: false,\n\t\t\twritable: true,\n\t\t\tvalue: existingProto\n\t\t});\n\t}\n\n\tif (!('createEvent' in document)) {\n\t\twindow.addEventListener = Window.prototype.addEventListener = Document.prototype.addEventListener = Element.prototype.addEventListener = function addEventListener() {\n\t\t\tvar\n\t\t\telement = this,\n\t\t\ttype = arguments[0],\n\t\t\tlistener = arguments[1];\n\n\t\t\tif (element === window && type in unlistenableWindowEvents) {\n\t\t\t\tthrow new Error('In IE8 the event: ' + type + ' is not available on the window object. Please see https://github.com/Financial-Times/polyfill-service/issues/317 for more information.');\n\t\t\t}\n\n\t\t\tif (!element._events) {\n\t\t\t\telement._events = {};\n\t\t\t}\n\n\t\t\tif (!element._events[type]) {\n\t\t\t\telement._events[type] = function (event) {\n\t\t\t\t\tvar\n\t\t\t\t\tlist = element._events[event.type].list,\n\t\t\t\t\tevents = list.slice(),\n\t\t\t\t\tindex = -1,\n\t\t\t\t\tlength = events.length,\n\t\t\t\t\teventElement;\n\n\t\t\t\t\tevent.preventDefault = function preventDefault() {\n\t\t\t\t\t\tif (event.cancelable !== false) {\n\t\t\t\t\t\t\tevent.returnValue = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tevent.stopPropagation = function stopPropagation() {\n\t\t\t\t\t\tevent.cancelBubble = true;\n\t\t\t\t\t};\n\n\t\t\t\t\tevent.stopImmediatePropagation = function stopImmediatePropagation() {\n\t\t\t\t\t\tevent.cancelBubble = true;\n\t\t\t\t\t\tevent.cancelImmediate = true;\n\t\t\t\t\t};\n\n\t\t\t\t\tevent.currentTarget = element;\n\t\t\t\t\tevent.relatedTarget = event.fromElement || null;\n\t\t\t\t\tevent.target = event.target || event.srcElement || element;\n\t\t\t\t\tevent.timeStamp = new Date().getTime();\n\n\t\t\t\t\tif (event.clientX) {\n\t\t\t\t\t\tevent.pageX = event.clientX + document.documentElement.scrollLeft;\n\t\t\t\t\t\tevent.pageY = event.clientY + document.documentElement.scrollTop;\n\t\t\t\t\t}\n\n\t\t\t\t\twhile (++index < length && !event.cancelImmediate) {\n\t\t\t\t\t\tif (index in events) {\n\t\t\t\t\t\t\teventElement = events[index];\n\n\t\t\t\t\t\t\tif (indexOf(list, eventElement) !== -1 && typeof eventElement === 'function') {\n\t\t\t\t\t\t\t\teventElement.call(element, event);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\telement._events[type].list = [];\n\n\t\t\t\tif (element.attachEvent) {\n\t\t\t\t\telement.attachEvent('on' + type, element._events[type]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\telement._events[type].list.push(listener);\n\t\t};\n\n\t\twindow.removeEventListener = Window.prototype.removeEventListener = Document.prototype.removeEventListener = Element.prototype.removeEventListener = function removeEventListener() {\n\t\t\tvar\n\t\t\telement = this,\n\t\t\ttype = arguments[0],\n\t\t\tlistener = arguments[1],\n\t\t\tindex;\n\n\t\t\tif (element._events && element._events[type] && element._events[type].list) {\n\t\t\t\tindex = indexOf(element._events[type].list, listener);\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\telement._events[type].list.splice(index, 1);\n\n\t\t\t\t\tif (!element._events[type].list.length) {\n\t\t\t\t\t\tif (element.detachEvent) {\n\t\t\t\t\t\t\telement.detachEvent('on' + type, element._events[type]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdelete element._events[type];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\twindow.dispatchEvent = Window.prototype.dispatchEvent = Document.prototype.dispatchEvent = Element.prototype.dispatchEvent = function dispatchEvent(event) {\n\t\t\tif (!arguments.length) {\n\t\t\t\tthrow new Error('Not enough arguments');\n\t\t\t}\n\n\t\t\tif (!event || typeof event.type !== 'string') {\n\t\t\t\tthrow new Error('DOM Events Exception 0');\n\t\t\t}\n\n\t\t\tvar element = this, type = event.type;\n\n\t\t\ttry {\n\t\t\t\tif (!event.bubbles) {\n\t\t\t\t\tevent.cancelBubble = true;\n\n\t\t\t\t\tvar cancelBubbleEvent = function (event) {\n\t\t\t\t\t\tevent.cancelBubble = true;\n\n\t\t\t\t\t\t(element || window).detachEvent('on' + type, cancelBubbleEvent);\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.attachEvent('on' + type, cancelBubbleEvent);\n\t\t\t\t}\n\n\t\t\t\tthis.fireEvent('on' + type, event);\n\t\t\t} catch (error) {\n\t\t\t\tevent.target = element;\n\n\t\t\t\tdo {\n\t\t\t\t\tevent.currentTarget = element;\n\n\t\t\t\t\tif ('_events' in element && typeof element._events[type] === 'function') {\n\t\t\t\t\t\telement._events[type].call(element, event);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (typeof element['on' + type] === 'function') {\n\t\t\t\t\t\telement['on' + type].call(element, event);\n\t\t\t\t\t}\n\n\t\t\t\t\telement = element.nodeType === 9 ? element.parentWindow : element.parentNode;\n\t\t\t\t} while (element && !event.cancelBubble);\n\t\t\t}\n\n\t\t\treturn true;\n\t\t};\n\n\t\t// Add the DOMContentLoaded Event\n\t\tdocument.attachEvent('onreadystatechange', function() {\n\t\t\tif (document.readyState === 'complete') {\n\t\t\t\tdocument.dispatchEvent(new Event('DOMContentLoaded', {\n\t\t\t\t\tbubbles: true\n\t\t\t\t}));\n\t\t\t}\n\t\t});\n\t}\n}());\n\n})\n.call('object' === typeof window && window || 'object' === typeof self && self || 'object' === typeof global && global || {});\n\nfunction Checkboxes ($module) {\n  this.$module = $module;\n  this.$inputs = $module.querySelectorAll('input[type=\"checkbox\"]');\n}\n\nCheckboxes.prototype.init = function () {\n  var $module = this.$module;\n  var $inputs = this.$inputs;\n\n  /**\n  * Loop over all items with [data-controls]\n  * Check if they have a matching conditional reveal\n  * If they do, assign attributes.\n  **/\n  nodeListForEach($inputs, function ($input) {\n    var controls = $input.getAttribute('data-aria-controls');\n\n    // Check if input controls anything\n    // Check if content exists, before setting attributes.\n    if (!controls || !$module.querySelector('#' + controls)) {\n      return\n    }\n\n    // If we have content that is controlled, set attributes.\n    $input.setAttribute('aria-controls', controls);\n    $input.removeAttribute('data-aria-controls');\n    this.setAttributes($input);\n  }.bind(this));\n\n  // Handle events\n  $module.addEventListener('click', this.handleClick.bind(this));\n};\n\nCheckboxes.prototype.setAttributes = function ($input) {\n  var inputIsChecked = $input.checked;\n  $input.setAttribute('aria-expanded', inputIsChecked);\n\n  var $content = document.querySelector('#' + $input.getAttribute('aria-controls'));\n  $content.setAttribute('aria-hidden', !inputIsChecked);\n};\n\nCheckboxes.prototype.handleClick = function (event) {\n  var $target = event.target;\n\n  // If a checkbox with aria-controls, handle click\n  var isCheckbox = $target.getAttribute('type') === 'checkbox';\n  var hasAriaControls = $target.getAttribute('aria-controls');\n  if (isCheckbox && hasAriaControls) {\n    this.setAttributes($target);\n  }\n};\n\nfunction ErrorSummary ($module) {\n  this.$module = $module;\n}\n\nErrorSummary.prototype.init = function () {\n  var $module = this.$module;\n  if (!$module) {\n    return\n  }\n  window.addEventListener('load', function () {\n    $module.focus();\n  });\n};\n\nfunction Radios ($module) {\n  this.$module = $module;\n  this.$inputs = $module.querySelectorAll('input[type=\"radio\"]');\n}\n\nRadios.prototype.init = function () {\n  var $module = this.$module;\n  var $inputs = this.$inputs;\n\n  /**\n  * Loop over all items with [data-controls]\n  * Check if they have a matching conditional reveal\n  * If they do, assign attributes.\n  **/\n  nodeListForEach($inputs, function ($input) {\n    var controls = $input.getAttribute('data-aria-controls');\n\n    // Check if input controls anything\n    // Check if content exists, before setting attributes.\n    if (!controls || !$module.querySelector('#' + controls)) {\n      return\n    }\n\n    // If we have content that is controlled, set attributes.\n    $input.setAttribute('aria-controls', controls);\n    $input.removeAttribute('data-aria-controls');\n    this.setAttributes($input);\n  }.bind(this));\n\n  // Handle events\n  $module.addEventListener('click', this.handleClick.bind(this));\n};\n\nRadios.prototype.setAttributes = function ($input) {\n  var inputIsChecked = $input.checked;\n  $input.setAttribute('aria-expanded', inputIsChecked);\n\n  var $content = document.querySelector('#' + $input.getAttribute('aria-controls'));\n  $content.setAttribute('aria-hidden', !inputIsChecked);\n};\n\nRadios.prototype.handleClick = function (event) {\n  nodeListForEach(this.$inputs, function ($input) {\n    // If a radio with aria-controls, handle click\n    var isRadio = $input.getAttribute('type') === 'radio';\n    var hasAriaControls = $input.getAttribute('aria-controls');\n    if (isRadio && hasAriaControls) {\n      this.setAttributes($input);\n    }\n  }.bind(this));\n};\n\nfunction initAll () {\n  new Button().init();\n  new Details().init();\n\n  var $checkboxes = document.querySelectorAll('[data-module=\"checkboxes\"]');\n  nodeListForEach($checkboxes, function ($checkbox) {\n    new Checkboxes($checkbox).init();\n  });\n\n  // Find first Error Summary module to enhance.\n  var $errorSummary = document.querySelector('[data-module=\"error-summary\"]');\n  new ErrorSummary($errorSummary).init();\n\n  var $radios = document.querySelectorAll('[data-module=\"radios\"]');\n  nodeListForEach($radios, function ($radio) {\n    new Radios($radio).init();\n  });\n}\n\n(initAll());\n\nexports.initAll = initAll;\n\n})));\n","import All from '@govuk-frontend/frontend/all';\n\nAll.init();\n"],"names":["this","global","All","init"],"mappings":"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","preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}