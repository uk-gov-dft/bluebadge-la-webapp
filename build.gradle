buildscript {
    ext {
        springBootVersion = '2.0.4.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url 'https://artifactory.does.not.exist/artifactory/gradle-dev-local'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4.7.3"
        classpath 'org.owasp:dependency-check-gradle:3.3.1'
    }
}

plugins {
    id 'com.github.sherter.google-java-format' version '0.6'
    id "org.sonarqube" version "2.6.2"
    id "com.moowork.node" version "1.2.0"
    id "com.moowork.gulp" version "1.2.0"
    id "com.jfrog.artifactory" version "4.5.4"
    id "com.gorylenko.gradle-git-properties" version "1.5.1"
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'pmd'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'jacoco'
apply plugin: 'org.owasp.dependencycheck'

//apply plugin: 'findbugs'

def getTheVersion() {
    def version = rootProject.file('VERSION').text.trim()
    def versionSuffix = "UnknownA"
    def workingDir = new File("${project.projectDir}")
    def result = 'git rev-parse --abbrev-ref HEAD'.execute(null, workingDir)
    result.waitFor()
    if (result.exitValue() == 0) {
        def gitBranch = result.text.trim().replaceAll('/','_')
        if (gitBranch == 'develop') {
            gitBranch = 'SNAPSHOT'
        }
        if (gitBranch == 'master') {
            versionSuffix = ''
        } else {
            versionSuffix = '-' + gitBranch
        }

    }
    return version + versionSuffix
}


task outputComputedVersion {
    def computedVersion = new File('VERSION-computed')
    computedVersion.delete()
    computedVersion.write(getTheVersion())
}


group = 'uk.gov.dft.bluebadge.webapp.la'
version = getTheVersion()
sourceCompatibility = 1.8

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'https://artifactory.does.not.exist/artifactory/gradle-dev-local'
    }
}

publishing {
    publications {
        project_webapp(MavenPublication) {
            from components.java
            artifactId "la-webapp"
        }
    }
}

artifactory {
    contextUrl = "https://artifactory.does.not.exist/artifactory"   //The base Artifactory URL if not overridden by the publisher/resolver
    publish {
        repository {
            repoKey = 'gradle-dev-local'
            maven = true
        }

        publishArtifacts=true
        publishPom=true
        defaults {
            publications('project_webapp')
            publishArtifacts=true
            publishPom=true
        }
    }

    resolve {
        repository {
            repoKey = 'gradle-release'
            maven = true

        }
    }

}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}
tasks.withType(Pmd) {
    reports {
        xml.enabled false
        html.enabled true
    }
}

configurations.all {
    resolutionStrategy {
        // don't cache changing modules at all
        cacheChangingModulesFor 0, 'seconds'
    }
}

dependencies {
    ext.commonVersion = '0.6.2-SNAPSHOT'

    compile( group: 'uk.gov.dft.bluebadge', name: 'bluebadge-common', version: "${commonVersion}", changing: true ){
        exclude group: 'org.mybatis.spring.boot', module: 'mybatis-spring-boot-starter'
    }

    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.0.1.RELEASE')
    compile('org.springframework.boot:spring-boot-starter-actuator')

    compile('org.springframework.boot:spring-boot-starter-thymeleaf')
    compile('org.thymeleaf.extras:thymeleaf-extras-springsecurity4')
    compile('nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:2.3.0')
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'
    compile('org.webjars:jquery:3.2.1')
    //compile('org.webjars:bootstrap:3.3.7')

    compile('io.springfox:springfox-swagger2:2.7.0')
    compile('io.springfox:springfox-swagger-ui:2.7.0')

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile('org.apache.commons:commons-lang3:3.7')
    compileOnly ('org.projectlombok:lombok:1.16.22')

    //hot swapping, disable cache for template, enable live reload
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime group: 'ch.qos.logback.contrib', name: 'logback-json-classic', version: '0.1.5'
    runtime group: 'ch.qos.logback.contrib', name: 'logback-jackson', version: '0.1.5'
    runtime group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.3'

    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('org.springframework.security:spring-security-test')
    testCompile("org.assertj:assertj-core:3.9.1")
    testCompile('com.jayway.restassured:rest-assured:2.9.0')
    testCompile( group: 'uk.gov.dft.bluebadge', name: 'bluebadge-common', version: "${commonVersion}", classifier: 'tests',  changing: true ){
        exclude group: 'org.mybatis.spring.boot', module: 'mybatis-spring-boot-starter'
    }
    testCompileOnly ('org.projectlombok:lombok:1.16.22')
}

jacoco {
    toolVersion = "0.8.1"
}

test {
    jacoco {
        excludes += ['.*uk.gov.dft.bluebadge.webapp.la.controller.request.*', '.*uk.gov.dft.bluebadge.webapp.la.controller.viewmodel.*', '.*uk.gov.dft.bluebadge.webapp.la.client.usermanagement.model.*','.*uk.gov.dft.bluebadge.webapp.la.exception.*']
    }
}

bootRun {
    sourceResources sourceSets.main
}

build.dependsOn gulp_default
build.finalizedBy(outputComputedVersion)

compileJava.dependsOn 'googleJavaFormat'

