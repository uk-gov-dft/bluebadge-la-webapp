apply plugin : 'eclipse'
apply plugin : 'eclipse-wtp'
apply plugin : 'java'
apply plugin : 'jacoco'
apply plugin : 'war'
apply plugin : 'org.akhikhl.gretty'

repositories {
    maven { url "http://repo.maven.apache.org/maven2" }
}

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.akhikhl.gretty:gretty:1.1.1'

    }
}

configurations {
    functTestCompile.extendsFrom testCompile
    functTestRuntime.extendsFrom testRuntime

}

sourceSets{
    functionalTest {
        java.srcDir file('src/test/java/')
        resources.srcDir('src/test/resources')

        compileClasspath = sourceSets.main.output + configurations.functTestCompile
        runtimeClasspath = output + compileClasspath + configurations.functTestRuntime
    }
}

dependencies {
    compile group: 'commons-io', name: 'commons-io', version:'2.6'
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.25'
    testCompile group: 'com.vimalselvam', name: 'cucumber-extentsreport', version: '3.0.2'
    testCompile group: 'com.aventstack', name: 'extentreports', version: '3.1.5'
    testCompile group: 'info.cukes', name: 'cucumber-java', version:'1.2.5'
    testCompile group: 'info.cukes', name: 'cucumber-junit', version:'1.2.5'
    testCompile group: 'info.cukes', name: 'cucumber-spring', version:'1.2.5'
    testCompile group: 'org.springframework', name: 'spring-context', version:'5.0.4.RELEASE'
    testCompile group: 'org.springframework', name: 'spring-test', version:'5.0.4.RELEASE'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-java', version:'3.10.0'
    testCompile group: 'org.seleniumhq.selenium', name: 'selenium-chrome-driver', version:'3.10.0'
    testCompile group: 'junit', name: 'junit', version:'4.12'
    testCompile group: 'org.hamcrest', name: 'java-hamcrest', version:'2.0.0.0'
    testCompile group: 'net.masterthought', name: 'cucumber-reporting', version:'3.8.0'
    functionalTestCompile 'org.springframework:spring-test:4.0.5.RELEASE'
}

gretty {
    contextConfigFile = "${projectDir}/tomcat-context.xml"
    jvmArgs = ['-Dspring.profiles.active=test']
    integrationTestTask = 'integrationTest'
    servletContainer = 'tomcat7'


    afterEvaluate {
        // Add integration test classes to Jetty's war
        tasks['prepareInplaceWebApp'].dependsOn 'copyIntegrationTestClasses', 'copyIntegrationTestResources'
    }
}

jacocoTestReport {
    executionData = fileTree(dir:"${buildDir}/jacoco/", include:"*.exec")
}

test {
    reports.junitXml.destination = "$buildDir/test-results/unit"
    reports.html.destination = "$buildDir/reports/tests/unit"
}

if (!hasProperty('buildProfile')) ext.buildProfile = 'local'
apply from: "./gradle/profiles/${buildProfile}.gradle"

if (!hasProperty('os')) ext.os = 'mac'